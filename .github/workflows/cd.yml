name: CD

on:
  workflow_dispatch:
    inputs:
      preid:
        description: "preid name(alpha, rc or stable)"
        required: true
        default: "rc"

jobs:
  cd:
    runs-on: ubuntu-latest

    steps:
      # - name: Validate CD branch
      #   if: ${{ github.event_name == 'workflow_dispatch' && github.ref != 'refs/heads/maven' && github.ref != 'refs/heads/dev' }}
      #   run: |
      #     echo It's not allowed to run CD on other branch except maven and dev.
      #     exit 1

      # - name: Validate inputs for maven
      #   if: ${{ github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/maven' && github.event.inputs.preid != 'rc' && github.event.inputs.preid != 'stable' }}
      #   run: |
      #     echo It's not allowed to release alpha on maven branch.
      #     exit 1

      # - name: Valiadte inputs for dev
      #   if: ${{ github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/dev' && github.event.inputs.preid != 'alpha' }}
      #   run: |
      #     echo It's not allowed to release RC or stable on dev branch.
      #     exit 1
      
      - name: Checkout branch
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Setup node
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 14

      - name: Setup npm registry
        run: |
          echo "${{ secrets.NPMRC }}" > ~/.npmrc
      
      - name: Setup project
        run: |
          npm run setup

      - name: Setup git
        run: |
          git config --global user.name 'wenytang-ms-123'
          git config --global user.email 'wenytang@wenytang.onmicrosoft.com'

      # - name: release alpha npm packages to npmjs.org
      #   if: ${{ github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/dev' && github.event.inputs.preid == 'alpha' }}
      #   run: |
      #     npx lerna version prerelease --preid=alpha.$(git rev-parse --short HEAD) --exact --no-push --allow-branch dev --yes --force-publish templates
      #     npx lerna publish from-package --dist-tag=alpha --yes --allow-branch dev

      # - name: release prerelease npm packages to npmjs.org
      #   if: ${{ github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/maven' && github.event.inputs.preid == 'rc' }}
      #   run: |
      #     npx lerna version --conventional-commits --conventional-prerelease --preid=rc --no-changelog --yes --ignore-scripts

      # - name: release stable npm packages to npmjs.org
      #   if: ${{ github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/maven' && github.event.inputs.preid == 'stable' }}
      #   run: |
      #     npx lerna version --conventional-commits --conventional-graduate --yes

      # - name: output versoin check
      #   id: version-change
      #   run: |
      #     echo "::set-output name=CHANGED::$(git tag --points-at HEAD | xargs)"
      #     echo "template_ver=$(git tag --points-at HEAD | grep templates@)" >> $GITHUB_ENV
      #     if git tag --points-at HEAD | grep templates | grep rc;
      #     then
      #         git push -d origin $(git tag --points-at HEAD | grep templates | grep rc)
      #     fi

      # - name: trigger simpleauth azure build pipeline
      #   uses: Azure/pipelines@v1
      #   with:
      #     azure-devops-project-url: 'https://dev.azure.com/mseng/VSIoT'
      #     azure-pipeline-name: 'Build Simple Auth Release Artifacts' 
      #     azure-devops-token: '${{ secrets.ADO_PAT }}'

      - name: check build status and download assets
        run: |
          output=$(./.github/scripts/simpleauth-azdo-pipelines.sh ${{ secrets.ADO_PAT }} 11303 >&1)
          if [ -z $output ]; then exit 1; fi
          echo $output
          asset_id=$(echo $output | rev |cut -d ' ' -f 1)
          simpleAuthVer=0.1.0
          curl "https://dev.azure.com/mseng/_apis/resources/Containers/$asset_id/drop?itemPath=drop/Microsoft.TeamsFx.SimpleAuth_$simpleAuthVer.zip" -L -O -u :${{ secrets.ADO_PAT}}
          if [ ! -f Microsoft.TeamsFx.*.zip ]; then exit 1; fi

      - name: download simpleauth to fx-core
        uses: nick-invision/retry@v2
        with: 
          timeout_minutes: 10
          max_attempts: 10
          retry_on: error
          command: |
            cp Microsoft.TeamsFx.SimpleAuth_*.zip packages/test1/SimpleAuth.zip
            ls packages/test1

      - name: publish simpleauth to github release page
        uses: ncipollo/release-action@v1.7.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: "SimpleAuth@1.1.6"
          artifacts: Microsoft.TeamsFx.SimpleAuth_*.zip
      # - name: output
      #   run: |
      #     echo ${{ env.template_ver }}

      # - name: ccccccccc
      #   if: ${{ contains(env.template_ver, 'templates@') }}
      #   run: |
      #     echo 'cccccccc'

      # - name: publish rc npm packages to npmjs.org
      #   if: ${{ github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/maven' && github.event.inputs.preid == 'rc' }}
      #   run: |
      #     npx lerna publish from-package --dist-tag=rc --yes

      # - name: publish stable npm packages to npmjs.org
      #   if: ${{ github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/maven' && github.event.inputs.preid == 'stable' }}
      #   run: |
      #     npx lerna publish from-package --yes

      # - name: sync up templates dependency on maven release
      #   if: ${{ !contains(steps.version-change.outputs.CHANGED, 'templates@') && contains(steps.version-change.outputs.CHANGED, '@wenyt-ms/test1@') }}
      #   run: |
      #     npm run preversion --prefix ./templates
      #     if [[ '${{github.event.inputs.preid}}' == 'stable' && ! -z "$(git diff --cached -- templates)" ]]; then
      #     git commit -m "chore: update template dependencies"
      #     npx lerna version --conventional-commits --no-changelog --ignore-scripts --yes
      #     echo "template_ver=$(git tag --points-at HEAD | grep templates)" >> $GITHUB_ENV 
      #     fi

      # - name: Zip dotnet
      #   uses: papeloto/action-zip@v1
      #   with:
      #     files: ./templates/simple
      #     dest: ./simple.zip

      # - name: release templates' alpha version to github
      #   if: ${{ github.event.inputs.preid == 'alpha' && contains( env.template_ver , 'templates@') }}
      #   uses: ncipollo/release-action@v1.7.3
      #   with:
      #     artifacts: ./*.zip
      #     name: 'Release for ${{ env.template_ver }}'
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     tag: "templates@0.0.0-alpha"
      #     allowUpdates: true
      #     prerelease: true

      # - name: release templates' RC version to github
      #   if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.preid == 'rc' }}
      #   uses: ncipollo/release-action@v1.7.3
      #   with:
      #     artifacts: ./*.zip
      #     name: 'Release for ${{ env.template_ver }}'
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     tag: "templates@0.0.0-rc"
      #     allowUpdates: true
      #     prerelease: true
      
      # - name: Create Templates Stable Release
      #   if: ${{ contains( env.template_ver, 'templates@') && github.event_name == 'workflow_dispatch' && github.event.inputs.preid == 'stable' }}
      #   uses: ncipollo/release-action@v1.7.3
      #   with:
      #     artifacts: ./*.zip
      #     name: 'Release for ${{ env.template_ver }}'
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     tag: ${{ env.template_ver }}
      #     allowUpdates: true
      